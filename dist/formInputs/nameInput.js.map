{
  "version": 3,
  "sources": ["../../src/formInputs/nameInput.ts"],
  "sourcesContent": ["export const nameInput: HTMLInputElement = document.querySelector('.name-input')\nexport let isNameErrorDisplayed: boolean = false\nconst nameInputUnderline: HTMLElement = document.querySelector('.name-underline')\nconst nameInputContainer: HTMLElement = document.querySelector('.project-input-container')\nconst emailInputBelow: HTMLElement = document.querySelector('.cc-email-input')\nconst nameRequiredErrorMessage: HTMLElement = document.querySelector('.cc-name-required-error')\n\nconst emailInputStyles: CSSStyleDeclaration = getComputedStyle(emailInputBelow)\nconst nameRequiredErrorStyles: CSSStyleDeclaration = getComputedStyle(nameRequiredErrorMessage)\nconst emailInputMarginTop: string = emailInputStyles.marginTop.substring(0, emailInputStyles.marginTop.length - 2)\nconst nameRequiredErrorLineHeight: string = nameRequiredErrorStyles.lineHeight.substring(0, nameRequiredErrorStyles.lineHeight.length - 2)\nnameInputUnderline.style.maxWidth = `${nameInputContainer.getBoundingClientRect().width}px`\n\nexport const displayNameRequiredError = (): void => {\n    if (!isNameErrorDisplayed) {\n        nameInputUnderline.style.width = '100%'\n        nameInputContainer.style.marginBottom = \"0px\"\n        emailInputBelow.style.marginTop = `${Number(emailInputMarginTop) - Number(nameRequiredErrorLineHeight)}px`\n        nameRequiredErrorMessage.style.display = 'block'\n        nameInputUnderline.style.backgroundColor = '#cb0b0b'\n        isNameErrorDisplayed = true\n    }\n}\n\nconst hideNameRequiredError = (): void => {\n    nameInputUnderline.style.backgroundColor = \"#7b7b7b\"\n    emailInputBelow.style.marginTop = `${emailInputMarginTop}px`\n    nameRequiredErrorMessage.style.display = 'none'\n    isNameErrorDisplayed = false\n}\n\nnameInput.addEventListener('focus', () => {\n    if (nameInput.value === \"\") {\n        nameInput.placeholder = ''\n    }\n})\n\nnameInput.addEventListener('blur', () => {\n    if (nameInput.value === \"\") {\n        nameInput.placeholder = \"Your name*\"\n        nameInputUnderline.style.width = '100%'\n        displayNameRequiredError()\n    }\n})\n\nnameInput.addEventListener('input', () => {\n    if (nameInput.value === \"\") {\n\n        displayNameRequiredError()\n    } else {\n        hideNameRequiredError()\n        const underlineWidth = Number(nameInputUnderline.style.width.substring(0, nameInputUnderline.style.width.length - 2))\n        if (underlineWidth < nameInputContainer.getBoundingClientRect().width) {\n            const fontSize = Number(getComputedStyle(nameInput).fontSize.substring(0, getComputedStyle(nameInput).fontSize.length - 2))\n            nameInputUnderline.style.width = `${nameInput.value.length * fontSize * 0.5}px`\n        }\n    }\n\n})"],
  "mappings": "MAAO,IAAMA,EAA8B,SAAS,cAAc,aAAa,EACpEC,EAAgC,GACrCC,EAAkC,SAAS,cAAc,iBAAiB,EAC1EC,EAAkC,SAAS,cAAc,0BAA0B,EACnFC,EAA+B,SAAS,cAAc,iBAAiB,EACvEC,EAAwC,SAAS,cAAc,yBAAyB,EAExFC,EAAwC,iBAAiBF,CAAe,EACxEG,EAA+C,iBAAiBF,CAAwB,EACxFG,EAA8BF,EAAiB,UAAU,UAAU,EAAGA,EAAiB,UAAU,OAAS,CAAC,EAC3GG,EAAsCF,EAAwB,WAAW,UAAU,EAAGA,EAAwB,WAAW,OAAS,CAAC,EACzIL,EAAmB,MAAM,SAAW,GAAGC,EAAmB,sBAAsB,EAAE,UAE3E,IAAMO,EAA2B,IAAY,CAC3CT,IACDC,EAAmB,MAAM,MAAQ,OACjCC,EAAmB,MAAM,aAAe,MACxCC,EAAgB,MAAM,UAAY,GAAG,OAAOI,CAAmB,EAAI,OAAOC,CAA2B,MACrGJ,EAAyB,MAAM,QAAU,QACzCH,EAAmB,MAAM,gBAAkB,UAC3CD,EAAuB,GAE/B,EAEMU,EAAwB,IAAY,CACtCT,EAAmB,MAAM,gBAAkB,UAC3CE,EAAgB,MAAM,UAAY,GAAGI,MACrCH,EAAyB,MAAM,QAAU,OACzCJ,EAAuB,EAC3B,EAEAD,EAAU,iBAAiB,QAAS,IAAM,CAClCA,EAAU,QAAU,KACpBA,EAAU,YAAc,GAEhC,CAAC,EAEDA,EAAU,iBAAiB,OAAQ,IAAM,CACjCA,EAAU,QAAU,KACpBA,EAAU,YAAc,aACxBE,EAAmB,MAAM,MAAQ,OACjCQ,EAAyB,EAEjC,CAAC,EAEDV,EAAU,iBAAiB,QAAS,IAAM,CACtC,GAAIA,EAAU,QAAU,GAEpBU,EAAyB,UAEzBC,EAAsB,EACC,OAAOT,EAAmB,MAAM,MAAM,UAAU,EAAGA,EAAmB,MAAM,MAAM,OAAS,CAAC,CAAC,EAC/FC,EAAmB,sBAAsB,EAAE,MAAO,CACnE,IAAMS,EAAW,OAAO,iBAAiBZ,CAAS,EAAE,SAAS,UAAU,EAAG,iBAAiBA,CAAS,EAAE,SAAS,OAAS,CAAC,CAAC,EAC1HE,EAAmB,MAAM,MAAQ,GAAGF,EAAU,MAAM,OAASY,EAAW,OAIpF,CAAC",
  "names": ["nameInput", "isNameErrorDisplayed", "nameInputUnderline", "nameInputContainer", "emailInputBelow", "nameRequiredErrorMessage", "emailInputStyles", "nameRequiredErrorStyles", "emailInputMarginTop", "nameRequiredErrorLineHeight", "displayNameRequiredError", "hideNameRequiredError", "fontSize"]
}
