{
  "version": 3,
  "sources": ["../../src/formInputs/attributionRadioGroup.ts"],
  "sourcesContent": ["export const attributionRadioGroup: HTMLElement | null = document.querySelector(\n    '.cc-attribution-radio-group'\n);\nexport let isAttributionRequiredErrorDisplayed: boolean = false;\nconst pills: HTMLDivElement[] = Array.from(\n    document.querySelectorAll('.cc-attribution-radio-group > .c-pill-m__light')\n);\n\nconst attributionRequiredErrorMessage: HTMLElement | null =\n    document.querySelector('.cc-attribution-required-error');\n\nconst calculateStyles = () => {\n    if (!attributionRequiredErrorMessage || !attributionRadioGroup) return {};\n    const attributionRequiredErrorStyles: CSSStyleDeclaration =\n        getComputedStyle(attributionRequiredErrorMessage);\n    const attributionRadioGroupsStyles: CSSStyleDeclaration = getComputedStyle(\n        attributionRadioGroup\n    );\n    return {\n        attributionRadioGroupMarginTop:\n            attributionRadioGroupsStyles.marginTop.substring(\n                0,\n                attributionRadioGroupsStyles.marginTop.length - 2\n            ),\n        attributionRequiredErrorLineHeight:\n            attributionRequiredErrorStyles.lineHeight.substring(\n                0,\n                attributionRequiredErrorStyles.lineHeight.length - 2\n            ),\n    };\n};\n\nconst { attributionRadioGroupMarginTop, attributionRequiredErrorLineHeight } =\n    calculateStyles();\n\nexport const displayAttributionRequiredError = () => {\n    if (!attributionRadioGroup) return;\n    if (!attributionRequiredErrorMessage) return;\n    attributionRadioGroup.style.marginTop = `${\n        Number(attributionRadioGroupMarginTop) -\n        Number(attributionRequiredErrorLineHeight)\n    }px`;\n    attributionRequiredErrorMessage.style.display = 'block';\n    for (let i = 0; i < pills.length; i++) {\n        pills[i].style.border = '1px solid #cb0b0b';\n    }\n    isAttributionRequiredErrorDisplayed = true;\n};\n\nexport const hideAttributionRequiredError = () => {\n    if (!attributionRadioGroup) return;\n    if (!attributionRequiredErrorMessage) return;\n    isAttributionRequiredErrorDisplayed = false;\n    attributionRequiredErrorMessage.style.display = 'none';\n    for (let i = 0; i < pills.length; i++) {\n        pills[i].style.border = '1px solid #9e9e9e';\n    }\n    attributionRadioGroup.style.marginTop = `${attributionRadioGroupMarginTop}px`;\n};\n"],
  "mappings": "MAAO,IAAMA,EAA4C,SAAS,cAC9D,6BACJ,EACWC,EAA+C,GACpDC,EAA0B,MAAM,KAClC,SAAS,iBAAiB,gDAAgD,CAC9E,EAEMC,EACF,SAAS,cAAc,gCAAgC,EAErDC,EAAkB,IAAM,CAC1B,GAAI,CAACD,GAAmC,CAACH,EAAuB,MAAO,CAAC,EACxE,IAAMK,EACF,iBAAiBF,CAA+B,EAC9CG,EAAoD,iBACtDN,CACJ,EACA,MAAO,CACH,+BACIM,EAA6B,UAAU,UACnC,EACAA,EAA6B,UAAU,OAAS,CACpD,EACJ,mCACID,EAA+B,WAAW,UACtC,EACAA,EAA+B,WAAW,OAAS,CACvD,CACR,CACJ,EAEM,CAAE,+BAAAE,EAAgC,mCAAAC,CAAmC,EACvEJ,EAAgB,EAEPK,EAAkC,IAAM,CACjD,GAAKT,GACAG,EACL,CAAAH,EAAsB,MAAM,UAAY,GACpC,OAAOO,CAA8B,EACrC,OAAOC,CAAkC,MAE7CL,EAAgC,MAAM,QAAU,QAChD,QAASO,EAAI,EAAGA,EAAIR,EAAM,OAAQQ,IAC9BR,EAAMQ,CAAC,EAAE,MAAM,OAAS,oBAE5BT,EAAsC,GAC1C,EAEaU,EAA+B,IAAM,CAC9C,GAAKX,GACAG,EACL,CAAAF,EAAsC,GACtCE,EAAgC,MAAM,QAAU,OAChD,QAASO,EAAI,EAAGA,EAAIR,EAAM,OAAQQ,IAC9BR,EAAMQ,CAAC,EAAE,MAAM,OAAS,oBAE5BV,EAAsB,MAAM,UAAY,GAAGO,MAC/C",
  "names": ["attributionRadioGroup", "isAttributionRequiredErrorDisplayed", "pills", "attributionRequiredErrorMessage", "calculateStyles", "attributionRequiredErrorStyles", "attributionRadioGroupsStyles", "attributionRadioGroupMarginTop", "attributionRequiredErrorLineHeight", "displayAttributionRequiredError", "i", "hideAttributionRequiredError"]
}
