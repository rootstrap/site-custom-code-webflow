{
  "version": 3,
  "sources": ["../../src/pillButtonCheckboxes/colors.ts", "../../src/pillButtonCheckboxes/referalPillButton.ts"],
  "sourcesContent": ["export const colors = {\n\tlightHoverColor: \"#ffc83f\",\n\tdarkHoverColor: \"#ffc83f\",\n\tlightSelectedHoverColor: \"#FFC83F\",\n\tdarkSelectedHoverColor: \"#FFC83F\",\n\tlightBackgroundColor: 'transparent',\n\tdarkBackgroundColor: 'transparent',\n\tlightSelectedBackgroundColor: '#1b1b1b',\n\tdarkSelectedBackgroundColor: \"#FFB90A\",\n\tlightTextColor: \"#1b1b1b\",\n\tlightSelectedTextColor: \"#FFFFFF\",\n\tdarkTextColor: \"#FFFFFF\",\n\tdarkSelectedTextColor: \"#0A0A0A\",\n}", "import { colors } from \"./colors\"\n\nconst referalCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-referal') as HTMLInputElement\nconst referalPill: HTMLElement = document.getElementById('pill-checkbox-referal')\nconst referalButtonHover: HTMLElement = document.getElementById('button-hover-referal')\nconst referalPillLabel: HTMLElement = document.getElementById('pill-list-label-referal')\n\nfunction isLightThemed() {\n\treturn referalPill.className.includes('__light')\n}\n\nconst referalThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (referalCheckbox.checked) {\n\t\t\treferalPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\treferalPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\treferalPillLabel.style.color = colors.lightTextColor\n\t\t\treferalPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (referalCheckbox.checked) {\n\t\t\treferalPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\treferalPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\treferalPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\treferalPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\nreferalThemeObserver.observe(referalPill, { attributes: true })\n\nreferalCheckbox.addEventListener('change', function () {\n\tif (this.checked) {\n\t\tif (isLightThemed()) {\n\t\t\treferalPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\treferalPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\treferalPillLabel.style.color = colors.darkSelectedTextColor\n\t\t\treferalPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\treferalPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t\treferalPillLabel.style.color = colors.lightTextColor\n\t\t} else {\n\t\t\treferalPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\treferalButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\treferalPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n});\n\nreferalPill.addEventListener('mouseover', function () {\n\tif (referalCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\treferalButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\treferalButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\treferalButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\treferalButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})\n\n"],
  "mappings": "MAAO,IAAMA,EAAS,CACrB,gBAAiB,UACjB,eAAgB,UAChB,wBAAyB,UACzB,uBAAwB,UACxB,qBAAsB,cACtB,oBAAqB,cACrB,6BAA8B,UAC9B,4BAA6B,UAC7B,eAAgB,UAChB,uBAAwB,UACxB,cAAe,UACf,sBAAuB,SACxB,ECXA,IAAMC,EAAoC,SAAS,eAAe,uBAAuB,EACnFC,EAA2B,SAAS,eAAe,uBAAuB,EAC1EC,EAAkC,SAAS,eAAe,sBAAsB,EAChFC,EAAgC,SAAS,eAAe,yBAAyB,EAEvF,SAASC,GAAgB,CACxB,OAAOH,EAAY,UAAU,SAAS,SAAS,CAChD,CAEA,IAAMI,EAAuB,IAAI,iBAAiB,CAACC,EAAuBC,IAAc,CACnFD,EAAa,CAAC,EAAE,OAAO,UAAU,SAAS,SAAS,EAClDN,EAAgB,SACnBC,EAAY,MAAM,gBAAkBO,EAAO,6BAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,wBAClDL,EAAiB,MAAM,MAAQK,EAAO,yBAEtCL,EAAiB,MAAM,MAAQK,EAAO,eACtCP,EAAY,MAAM,gBAAkBO,EAAO,qBAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,iBAG/CR,EAAgB,SACnBC,EAAY,MAAM,gBAAkBO,EAAO,4BAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,uBAClDL,EAAiB,MAAM,MAAQK,EAAO,wBAEtCP,EAAY,MAAM,gBAAkBO,EAAO,oBAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,eAClDL,EAAiB,MAAM,MAAQK,EAAO,cAGzC,CAAC,EAEDH,EAAqB,QAAQJ,EAAa,CAAE,WAAY,EAAK,CAAC,EAE9DD,EAAgB,iBAAiB,SAAU,UAAY,CAClD,KAAK,QACJI,EAAc,GACjBH,EAAY,MAAM,gBAAkBO,EAAO,6BAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,wBAClDL,EAAiB,MAAM,MAAQK,EAAO,yBAEtCL,EAAiB,MAAM,MAAQK,EAAO,sBACtCP,EAAY,MAAM,gBAAkBO,EAAO,4BAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,wBAG/CJ,EAAc,GACjBH,EAAY,MAAM,gBAAkBO,EAAO,qBAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,gBAClDL,EAAiB,MAAM,MAAQK,EAAO,iBAEtCP,EAAY,MAAM,gBAAkBO,EAAO,oBAC3CN,EAAmB,MAAM,gBAAkBM,EAAO,eAClDL,EAAiB,MAAM,MAAQK,EAAO,cAGzC,CAAC,EAEDP,EAAY,iBAAiB,YAAa,UAAY,CACjDD,EAAgB,QACfI,EAAc,EACjBF,EAAmB,MAAM,gBAAkBM,EAAO,wBAElDN,EAAmB,MAAM,gBAAkBM,EAAO,uBAG/CJ,EAAc,EACjBF,EAAmB,MAAM,gBAAkBM,EAAO,gBAElDN,EAAmB,MAAM,gBAAkBM,EAAO,cAGrD,CAAC",
  "names": ["colors", "referalCheckbox", "referalPill", "referalButtonHover", "referalPillLabel", "isLightThemed", "referalThemeObserver", "mutationList", "_observer", "colors"]
}
