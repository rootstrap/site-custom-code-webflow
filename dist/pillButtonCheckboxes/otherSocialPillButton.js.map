{
  "version": 3,
  "sources": ["../../src/formInputs/socialCheckboxGroup.ts", "../../src/pillButtonCheckboxes/colors.ts", "../../src/pillButtonCheckboxes/otherSocialPillButton.ts"],
  "sourcesContent": ["export const socialsCheckboxGroup: HTMLElement = document.querySelector('.cc-socials-checkbox-group')\nexport let isSocialsCheckboxErrorDisplayed: boolean = false;\nexport const checkboxes: HTMLInputElement[] = [\n    document.querySelector('#pill-checkbox-google'),\n    document.querySelector('#pill-checkbox-social'),\n    document.querySelector('#pill-checkbox-friend'),\n    document.querySelector('#pill-checkbox-referal'),\n    document.querySelector('#pill-checkbox-other-social'),\n]\nconst socialsRequiredErrorMessage: HTMLElement = document.querySelector('.cc-socials-required-error')\n\nconst socialsRequiredErrorStyles: CSSStyleDeclaration = getComputedStyle(socialsRequiredErrorMessage)\nconst socialsCheckboxGroupsStyles: CSSStyleDeclaration = getComputedStyle(socialsCheckboxGroup)\nconst socialsCheckboxGroupMarginTop: string = socialsCheckboxGroupsStyles.marginTop.substring(0, socialsCheckboxGroupsStyles.marginTop.length - 2)\nconst socialsRequiredErrorLineHeight: string = socialsRequiredErrorStyles.lineHeight.substring(0, socialsRequiredErrorStyles.lineHeight.length - 2)\n\n\nexport const displaySocialCheckboxError = () => {\n    if (!isSocialsCheckboxErrorDisplayed) {\n        socialsCheckboxGroup.style.marginTop = `${Number(socialsCheckboxGroupMarginTop) - Number(socialsRequiredErrorLineHeight)}px`\n        socialsRequiredErrorMessage.style.display = 'block'\n        for (let i = 0; i < checkboxes.length; i++) {\n            checkboxes[i].style.border = '1px solid #cb0b0b'\n        }\n        isSocialsCheckboxErrorDisplayed = true\n    }\n}\n\nexport const hideSocialsCheckboxError = () => {\n    socialsRequiredErrorMessage.style.display = 'none'\n    for (let i = 0; i < checkboxes.length; i++) {\n        checkboxes[i].style.border = '1px solid #9e9e9e'\n    }\n    socialsCheckboxGroup.style.marginTop = `${socialsCheckboxGroupMarginTop}px`\n    isSocialsCheckboxErrorDisplayed = false\n}", "export const colors = {\n\tlightHoverColor: \"#ffc83f\",\n\tdarkHoverColor: \"#ffc83f\",\n\tlightSelectedHoverColor: \"#FFC83F\",\n\tdarkSelectedHoverColor: \"#FFC83F\",\n\tlightBackgroundColor: 'transparent',\n\tdarkBackgroundColor: 'transparent',\n\tlightSelectedBackgroundColor: '#1b1b1b',\n\tdarkSelectedBackgroundColor: \"#FFB90A\",\n\tlightTextColor: \"#1b1b1b\",\n\tlightSelectedTextColor: \"#FFFFFF\",\n\tdarkTextColor: \"#FFFFFF\",\n\tdarkSelectedTextColor: \"#0A0A0A\",\n}", "import { hideSocialsCheckboxError } from \"../formInputs/socialCheckboxGroup\"\nimport { colors } from \"./colors\"\n\nconst otherSocialCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-other-social') as HTMLInputElement\nconst otherSocialPill: HTMLElement = document.getElementById('pill-checkbox-other-social')\nconst otherSocialButtonHover: HTMLElement = document.getElementById('button-hover-other-social')\nconst otherSocialPillLabel: HTMLElement = document.getElementById('pill-list-label-other-social')\n\nfunction isLightThemed() {\n\treturn otherSocialPill.className.includes('__light')\n}\n\nconst otherSocialThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (otherSocialCheckbox.checked) {\n\t\t\totherSocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\totherSocialPillLabel.style.color = colors.lightTextColor\n\t\t\totherSocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (otherSocialCheckbox.checked) {\n\t\t\totherSocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\totherSocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\notherSocialThemeObserver.observe(otherSocialPill, { attributes: true })\n\notherSocialCheckbox.addEventListener('change', function () {\n\thideSocialsCheckboxError()\n\tif (this.checked) {\n\t\tif (isLightThemed()) {\n\t\t\totherSocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\totherSocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\t\totherSocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\totherSocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.lightTextColor\n\t\t} else {\n\t\t\totherSocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n});\n\notherSocialPill.addEventListener('mouseover', function () {\n\tif (otherSocialCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})"],
  "mappings": "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",
  "names": ["socialsCheckboxGroup", "isSocialsCheckboxErrorDisplayed", "checkboxes", "socialsRequiredErrorMessage", "socialsRequiredErrorStyles", "socialsCheckboxGroupsStyles", "socialsCheckboxGroupMarginTop", "socialsRequiredErrorLineHeight", "hideSocialsCheckboxError", "socialsRequiredErrorMessage", "i", "checkboxes", "socialsCheckboxGroup", "socialsCheckboxGroupMarginTop", "isSocialsCheckboxErrorDisplayed", "colors", "otherSocialCheckbox", "otherSocialPill", "otherSocialButtonHover", "otherSocialPillLabel", "isLightThemed", "otherSocialThemeObserver", "mutationList", "_observer", "colors", "hideSocialsCheckboxError"]
}
