{
  "version": 3,
  "sources": ["../../src/formInputs/socialCheckboxGroup.ts", "../../src/pillButtonCheckboxes/colors.ts", "../../src/pillButtonCheckboxes/socialMediaPillButton.ts", "../../src/pillButtonCheckboxes/referralPillButton.ts", "../../src/pillButtonCheckboxes/otherSocialPillButton.ts", "../../src/pillButtonCheckboxes/googlePillButton.ts", "../../src/pillButtonCheckboxes/friendPillButton.ts"],
  "sourcesContent": ["export const socialsCheckboxGroup: HTMLElement = document.querySelector('.cc-socials-checkbox-group')\nexport let isSocialsCheckboxErrorDisplayed: boolean = false;\nconst pills: HTMLInputElement[] = [\n    document.querySelector('#pill-checkbox-google'),\n    document.querySelector('#pill-checkbox-social'),\n    document.querySelector('#pill-checkbox-friend'),\n    document.querySelector('#pill-checkbox-referral'),\n    document.querySelector('#pill-checkbox-other-social'),\n]\nconst socialsRequiredErrorMessage: HTMLElement = document.querySelector('.cc-socials-required-error')\n\nconst socialsRequiredErrorStyles: CSSStyleDeclaration = getComputedStyle(socialsRequiredErrorMessage)\nconst socialsCheckboxGroupsStyles: CSSStyleDeclaration = getComputedStyle(socialsCheckboxGroup)\nconst socialsCheckboxGroupMarginTop: string = socialsCheckboxGroupsStyles.marginTop.substring(0, socialsCheckboxGroupsStyles.marginTop.length - 2)\nconst socialsRequiredErrorLineHeight: string = socialsRequiredErrorStyles.lineHeight.substring(0, socialsRequiredErrorStyles.lineHeight.length - 2)\n\n\nexport const displaySocialCheckboxError = () => {\n    socialsCheckboxGroup.style.marginTop = `${Number(socialsCheckboxGroupMarginTop) - Number(socialsRequiredErrorLineHeight)}px`\n    socialsRequiredErrorMessage.style.display = 'block'\n    for (let i = 0; i < pills.length; i++) {\n        pills[i].style.border = '1px solid #cb0b0b'\n    }\n    isSocialsCheckboxErrorDisplayed = true\n}\n\nexport const hideSocialsCheckboxError = () => {\n    isSocialsCheckboxErrorDisplayed = false\n    socialsRequiredErrorMessage.style.display = 'none'\n    for (let i = 0; i < pills.length; i++) {\n        pills[i].style.border = '1px solid #9e9e9e'\n    }\n    socialsCheckboxGroup.style.marginTop = `${socialsCheckboxGroupMarginTop}px`\n}", "export const colors = {\n\tlightHoverColor: \"#ffc83f\",\n\tdarkHoverColor: \"#ffc83f\",\n\tlightSelectedHoverColor: \"#FFC83F\",\n\tdarkSelectedHoverColor: \"#FFC83F\",\n\tlightBackgroundColor: 'transparent',\n\tdarkBackgroundColor: 'transparent',\n\tlightSelectedBackgroundColor: '#1b1b1b',\n\tdarkSelectedBackgroundColor: \"#FFB90A\",\n\tlightTextColor: \"#1b1b1b\",\n\tlightSelectedTextColor: \"#FFFFFF\",\n\tdarkTextColor: \"#FFFFFF\",\n\tdarkSelectedTextColor: \"#0A0A0A\",\n}", "import { hideSocialsCheckboxError } from \"../formInputs/socialCheckboxGroup\"\nimport { colors } from \"./colors\"\nimport { unselectFriendCheckbox } from \"./friendPillButton\"\nimport { unselectGoogleCheckbox } from \"./googlePillButton\"\nimport { unselectOtherSocialCheckbox } from \"./otherSocialPillButton\"\nimport { unselectReferralCheckbox } from \"./referralPillButton\"\n\nconst socialCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-social') as HTMLInputElement\nconst socialPill: HTMLElement = document.getElementById('pill-checkbox-social')\nconst socialButtonHover: HTMLElement = document.getElementById('button-hover-social')\nconst socialPillLabel: HTMLElement = document.getElementById('pill-list-label-social')\n\nfunction isLightThemed() {\n\treturn socialPill.className.includes('__light')\n}\n\nconst socialThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (socialCheckbox.checked) {\n\t\t\tsocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\tsocialPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\tsocialPillLabel.style.color = colors.lightTextColor\n\t\t\tsocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (socialCheckbox.checked) {\n\t\t\tsocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\tsocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\tsocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\tsocialPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\nsocialThemeObserver.observe(socialPill, { attributes: true })\n\nsocialPill.addEventListener('click', function () {\n\thideSocialsCheckboxError()\n\tif (!socialCheckbox.checked) {\n\t\tselectSocialCheckbox()\n\t} else {\n\t\tunselectSocialCheckbox()\n\t}\n});\n\nsocialPill.addEventListener('mouseover', function () {\n\tif (socialCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})\n\nconst selectSocialCheckbox = () => {\n\tsocialCheckbox.checked = true\n\tunselectGoogleCheckbox()\n\tunselectOtherSocialCheckbox()\n\tunselectFriendCheckbox()\n\tunselectReferralCheckbox()\n\tif (isLightThemed()) {\n\t\tsocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\tsocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\tsocialPillLabel.style.color = colors.lightSelectedTextColor\n\t} else {\n\t\tsocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\tsocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\tsocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t}\n}\n\nexport const unselectSocialCheckbox = () => {\n\tif (!socialCheckbox.checked) return\n\tsocialCheckbox.checked = false\n\tif (isLightThemed()) {\n\t\tsocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\tsocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\tsocialPillLabel.style.color = colors.lightTextColor\n\t} else {\n\t\tsocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\tsocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\tsocialPillLabel.style.color = colors.darkTextColor\n\t}\n}", "import { hideSocialsCheckboxError } from \"../formInputs/socialCheckboxGroup\"\nimport { colors } from \"./colors\"\nimport { unselectFriendCheckbox } from \"./friendPillButton\"\nimport { unselectGoogleCheckbox } from \"./googlePillButton\"\nimport { unselectOtherSocialCheckbox } from \"./otherSocialPillButton\"\nimport { unselectSocialCheckbox } from \"./socialMediaPillButton\"\n\nconst referralCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-referral') as HTMLInputElement\nconst referralPill: HTMLElement = document.getElementById('pill-checkbox-referral')\nconst referralButtonHover: HTMLElement = document.getElementById('button-hover-referral')\nconst referralPillLabel: HTMLElement = document.getElementById('pill-list-label-referral')\n\nfunction isLightThemed() {\n\treturn referralPill.className.includes('__light')\n}\n\nconst referralThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (referralCheckbox.checked) {\n\t\t\treferralPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\treferralButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\treferralPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\treferralPillLabel.style.color = colors.lightTextColor\n\t\t\treferralPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\treferralButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (referralCheckbox.checked) {\n\t\t\treferralPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\treferralButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\treferralPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\treferralPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\treferralButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\treferralPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\nreferralThemeObserver.observe(referralPill, { attributes: true })\n\nreferralPill.addEventListener('click', function () {\n\thideSocialsCheckboxError()\n\tif (!referralCheckbox.checked) {\n\t\tselectReferralCheckbox()\n\t} else {\n\t\tunselectReferralCheckbox()\n\t}\n});\n\nreferralPill.addEventListener('mouseover', function () {\n\tif (referralCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\treferralButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\treferralButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\treferralButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\treferralButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})\nconst selectReferralCheckbox = () => {\n\treferralCheckbox.checked = true\n\tunselectGoogleCheckbox()\n\tunselectFriendCheckbox()\n\tunselectOtherSocialCheckbox()\n\tunselectSocialCheckbox()\n\tif (isLightThemed()) {\n\t\treferralPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\treferralButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\treferralPillLabel.style.color = colors.lightSelectedTextColor\n\t} else {\n\t\treferralPillLabel.style.color = colors.darkSelectedTextColor\n\t\treferralPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\treferralButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t}\n}\n\nexport const unselectReferralCheckbox = () => {\n\tif (!referralCheckbox.checked) return\n\treferralCheckbox.checked = false\n\tif (isLightThemed()) {\n\t\treferralPill.style.backgroundColor = colors.lightBackgroundColor\n\t\treferralButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\treferralPillLabel.style.color = colors.lightTextColor\n\t} else {\n\t\treferralPill.style.backgroundColor = colors.darkBackgroundColor\n\t\treferralButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\treferralPillLabel.style.color = colors.darkTextColor\n\t}\n}\n", "import { hideSocialsCheckboxError } from \"../formInputs/socialCheckboxGroup\"\nimport { colors } from \"./colors\"\nimport { unselectFriendCheckbox } from \"./friendPillButton\"\nimport { unselectGoogleCheckbox } from \"./googlePillButton\"\nimport { unselectReferralCheckbox } from \"./referralPillButton\"\nimport { unselectSocialCheckbox } from \"./socialMediaPillButton\"\n\nconst otherSocialCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-other-social') as HTMLInputElement\nconst otherSocialPill: HTMLElement = document.getElementById('pill-checkbox-other-social')\nconst otherSocialButtonHover: HTMLElement = document.getElementById('button-hover-other-social')\nconst otherSocialPillLabel: HTMLElement = document.getElementById('pill-list-label-other-social')\n\nfunction isLightThemed() {\n\treturn otherSocialPill.className.includes('__light')\n}\n\nconst otherSocialThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (otherSocialCheckbox.checked) {\n\t\t\totherSocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\totherSocialPillLabel.style.color = colors.lightTextColor\n\t\t\totherSocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (otherSocialCheckbox.checked) {\n\t\t\totherSocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\totherSocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\totherSocialPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\notherSocialThemeObserver.observe(otherSocialPill, { attributes: true })\n\notherSocialPill.addEventListener('click', function () {\n\thideSocialsCheckboxError()\n\tif (!otherSocialCheckbox.checked) {\n\t\tselectOtherSocialCheckbox()\n\t} else {\n\t\tunselectOtherSocialCheckbox()\n\t}\n});\n\notherSocialPill.addEventListener('mouseover', function () {\n\tif (otherSocialCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\totherSocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})\n\nconst selectOtherSocialCheckbox = () => {\n\totherSocialCheckbox.checked = true\n\tunselectGoogleCheckbox()\n\tunselectFriendCheckbox()\n\tunselectSocialCheckbox()\n\tunselectReferralCheckbox()\n\tif (isLightThemed()) {\n\t\totherSocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\totherSocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\totherSocialPillLabel.style.color = colors.lightSelectedTextColor\n\t} else {\n\t\totherSocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\totherSocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\totherSocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t}\n}\n\nexport const unselectOtherSocialCheckbox = () => {\n\tif (!otherSocialCheckbox.checked) return\n\totherSocialCheckbox.checked = false\n\tif (isLightThemed()) {\n\t\totherSocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\totherSocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\totherSocialPillLabel.style.color = colors.lightTextColor\n\t} else {\n\t\totherSocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\totherSocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\totherSocialPillLabel.style.color = colors.darkTextColor\n\t}\n}", "import { hideSocialsCheckboxError } from \"../formInputs/socialCheckboxGroup\"\nimport { colors } from \"./colors\"\nimport { unselectFriendCheckbox } from \"./friendPillButton\"\nimport { unselectOtherSocialCheckbox } from \"./otherSocialPillButton\"\nimport { unselectReferralCheckbox } from \"./referralPillButton\"\nimport { unselectSocialCheckbox } from \"./socialMediaPillButton\"\n\nconst googleCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-google') as HTMLInputElement\nconst googlePill: HTMLElement = document.getElementById('pill-checkbox-google')\nconst googleButtonHover: HTMLElement = document.getElementById('button-hover-google')\nconst googlePillLabel: HTMLElement = document.getElementById('pill-list-label-google')\n\nfunction isLightThemed() {\n\treturn googlePill.className.includes('__light')\n}\n\nconst googleThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (googleCheckbox.checked) {\n\t\t\tgooglePill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\tgooglePillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\tgooglePillLabel.style.color = colors.lightTextColor\n\t\t\tgooglePill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (googleCheckbox.checked) {\n\t\t\tgooglePill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\tgooglePillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\tgooglePill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\tgooglePillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\ngoogleThemeObserver.observe(googlePill, { attributes: true })\n\ngooglePill.addEventListener('click', function () {\n\thideSocialsCheckboxError()\n\tif (!googleCheckbox.checked) {\n\t\tselectGoogleCheckbox()\n\t} else {\n\t\tunselectGoogleCheckbox()\n\t}\n});\n\ngooglePill.addEventListener('mouseover', function () {\n\tif (googleCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\tgoogleButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})\n\nconst selectGoogleCheckbox = () => {\n\tgoogleCheckbox.checked = true\n\tunselectFriendCheckbox()\n\tunselectOtherSocialCheckbox()\n\tunselectSocialCheckbox()\n\tunselectReferralCheckbox()\n\tif (isLightThemed()) {\n\t\tgooglePill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\tgoogleButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\tgooglePillLabel.style.color = colors.lightSelectedTextColor\n\t} else {\n\t\tgooglePillLabel.style.color = colors.darkSelectedTextColor\n\t\tgooglePill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\tgoogleButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t}\n}\n\nexport const unselectGoogleCheckbox = () => {\n\tif (!googleCheckbox.checked) return\n\tgoogleCheckbox.checked = false\n\tif (isLightThemed()) {\n\t\tgooglePill.style.backgroundColor = colors.lightBackgroundColor\n\t\tgoogleButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\tgooglePillLabel.style.color = colors.lightTextColor\n\t} else {\n\t\tgooglePill.style.backgroundColor = colors.darkBackgroundColor\n\t\tgoogleButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\tgooglePillLabel.style.color = colors.darkTextColor\n\t}\n}", "import { hideSocialsCheckboxError } from \"../formInputs/socialCheckboxGroup\"\nimport { colors } from \"./colors\"\nimport { unselectGoogleCheckbox } from \"./googlePillButton\"\nimport { unselectOtherSocialCheckbox } from \"./otherSocialPillButton\"\nimport { unselectReferralCheckbox } from \"./referralPillButton\"\nimport { unselectSocialCheckbox } from \"./socialMediaPillButton\"\n\nconst friendCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-friend') as HTMLInputElement\nconst friendPill: HTMLElement = document.getElementById('pill-checkbox-friend')\nconst friendButtonHover: HTMLElement = document.getElementById('button-hover-friend')\nconst friendPillLabel: HTMLElement = document.getElementById('pill-list-label-friend')\n\nfunction isLightThemed() {\n\treturn friendPill.className.includes('__light')\n}\n\nconst friendThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (friendCheckbox.checked) {\n\t\t\tfriendPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\tfriendButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\tfriendPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\tfriendPillLabel.style.color = colors.lightTextColor\n\t\t\tfriendPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\tfriendButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (friendCheckbox.checked) {\n\t\t\tfriendPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\tfriendButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\tfriendPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\tfriendPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\tfriendButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\tfriendPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\nfriendThemeObserver.observe(friendPill, { attributes: true })\n\nfriendPill.addEventListener('click', function () {\n\thideSocialsCheckboxError()\n\tif (!friendCheckbox.checked) {\n\t\tselectFriendCheckbox()\n\t} else {\n\t\tunselectFriendCheckbox()\n\t}\n});\n\nfriendPill.addEventListener('mouseover', function () {\n\tif (friendCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\tfriendButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\tfriendButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\tfriendButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\tfriendButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})\n\nconst selectFriendCheckbox = () => {\n\tfriendCheckbox.checked = true\n\tunselectGoogleCheckbox()\n\tunselectOtherSocialCheckbox()\n\tunselectReferralCheckbox()\n\tunselectSocialCheckbox()\n\tif (isLightThemed()) {\n\t\tfriendPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\tfriendButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\tfriendPillLabel.style.color = colors.lightSelectedTextColor\n\t} else {\n\t\tfriendPillLabel.style.color = colors.darkSelectedTextColor\n\t\tfriendPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\tfriendButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t}\n}\n\nexport const unselectFriendCheckbox = () => {\n\tif (!friendCheckbox.checked) return\n\tfriendCheckbox.checked = false\n\tif (isLightThemed()) {\n\t\tfriendPill.style.backgroundColor = colors.lightBackgroundColor\n\t\tfriendButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\tfriendPillLabel.style.color = colors.lightTextColor\n\t} else {\n\t\tfriendPill.style.backgroundColor = colors.darkBackgroundColor\n\t\tfriendButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\tfriendPillLabel.style.color = colors.darkTextColor\n\t}\n}"],
  "mappings": "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",
  "names": ["socialsCheckboxGroup", "isSocialsCheckboxErrorDisplayed", "pills", "socialsRequiredErrorMessage", "socialsRequiredErrorStyles", "socialsCheckboxGroupsStyles", "socialsCheckboxGroupMarginTop", "socialsRequiredErrorLineHeight", "hideSocialsCheckboxError", "isSocialsCheckboxErrorDisplayed", "socialsRequiredErrorMessage", "i", "pills", "socialsCheckboxGroup", "socialsCheckboxGroupMarginTop", "colors", "socialCheckbox", "socialPill", "socialButtonHover", "socialPillLabel", "isLightThemed", "socialThemeObserver", "mutationList", "_observer", "colors", "hideSocialsCheckboxError", "unselectSocialCheckbox", "selectSocialCheckbox", "unselectGoogleCheckbox", "unselectOtherSocialCheckbox", "unselectFriendCheckbox", "unselectReferralCheckbox", "referralCheckbox", "referralPill", "referralButtonHover", "referralPillLabel", "isLightThemed", "referralThemeObserver", "mutationList", "_observer", "colors", "hideSocialsCheckboxError", "unselectReferralCheckbox", "selectReferralCheckbox", "unselectGoogleCheckbox", "unselectFriendCheckbox", "unselectOtherSocialCheckbox", "unselectSocialCheckbox", "otherSocialCheckbox", "otherSocialPill", "otherSocialButtonHover", "otherSocialPillLabel", "isLightThemed", "otherSocialThemeObserver", "mutationList", "_observer", "colors", "hideSocialsCheckboxError", "unselectOtherSocialCheckbox", "selectOtherSocialCheckbox", "unselectGoogleCheckbox", "unselectFriendCheckbox", "unselectSocialCheckbox", "unselectReferralCheckbox", "googleCheckbox", "googlePill", "googleButtonHover", "googlePillLabel", "isLightThemed", "googleThemeObserver", "mutationList", "_observer", "colors", "hideSocialsCheckboxError", "unselectGoogleCheckbox", "selectGoogleCheckbox", "unselectFriendCheckbox", "unselectOtherSocialCheckbox", "unselectSocialCheckbox", "unselectReferralCheckbox", "friendCheckbox", "friendPill", "friendButtonHover", "friendPillLabel", "isLightThemed", "friendThemeObserver", "mutationList", "_observer", "colors", "hideSocialsCheckboxError", "unselectFriendCheckbox", "selectFriendCheckbox", "unselectGoogleCheckbox", "unselectOtherSocialCheckbox", "unselectReferralCheckbox", "unselectSocialCheckbox"]
}
