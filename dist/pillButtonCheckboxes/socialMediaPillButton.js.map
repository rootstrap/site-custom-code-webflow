{
  "version": 3,
  "sources": ["../../src/pillButtonCheckboxes/colors.ts", "../../src/pillButtonCheckboxes/socialMediaPillButton.ts"],
  "sourcesContent": ["export const colors = {\n\tlightHoverColor: \"#ffc83f\",\n\tdarkHoverColor: \"#ffc83f\",\n\tlightSelectedHoverColor: \"#FFC83F\",\n\tdarkSelectedHoverColor: \"#FFC83F\",\n\tlightBackgroundColor: 'transparent',\n\tdarkBackgroundColor: 'transparent',\n\tlightSelectedBackgroundColor: '#1b1b1b',\n\tdarkSelectedBackgroundColor: \"#FFB90A\",\n\tlightTextColor: \"#1b1b1b\",\n\tlightSelectedTextColor: \"#FFFFFF\",\n\tdarkTextColor: \"#FFFFFF\",\n\tdarkSelectedTextColor: \"#0A0A0A\",\n}", "import { colors } from \"./colors\"\n\nconst socialCheckbox: HTMLInputElement = document.getElementById('checkbox-pill-social') as HTMLInputElement\nconst socialPill: HTMLElement = document.getElementById('pill-checkbox-social')\nconst socialButtonHover: HTMLElement = document.getElementById('button-hover-social')\nconst socialPillLabel: HTMLElement = document.getElementById('pill-list-label-social')\n\nfunction isLightThemed() {\n\treturn socialPill.className.includes('__light')\n}\n\nconst socialThemeObserver = new MutationObserver((mutationList: unknown, _observer) => {\n\tif (mutationList[0].target.className.includes('__light')) {\n\t\tif (socialCheckbox.checked) {\n\t\t\tsocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\tsocialPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\tsocialPillLabel.style.color = colors.lightTextColor\n\t\t\tsocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t}\n\t} else {\n\t\tif (socialCheckbox.checked) {\n\t\t\tsocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t\tsocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\t} else {\n\t\t\tsocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\tsocialPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n})\n\nsocialThemeObserver.observe(socialPill, { attributes: true })\n\nsocialCheckbox.addEventListener('change', function () {\n\tif (this.checked) {\n\t\tif (isLightThemed()) {\n\t\t\tsocialPill.style.backgroundColor = colors.lightSelectedBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t\tsocialPillLabel.style.color = colors.lightSelectedTextColor\n\t\t} else {\n\t\t\tsocialPillLabel.style.color = colors.darkSelectedTextColor\n\t\t\tsocialPill.style.backgroundColor = colors.darkSelectedBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\tsocialPill.style.backgroundColor = colors.lightBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t\tsocialPillLabel.style.color = colors.lightTextColor\n\t\t} else {\n\t\t\tsocialPill.style.backgroundColor = colors.darkBackgroundColor\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t\tsocialPillLabel.style.color = colors.darkTextColor\n\t\t}\n\t}\n});\n\nsocialPill.addEventListener('mouseover', function () {\n\tif (socialCheckbox.checked) {\n\t\tif (isLightThemed()) {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightSelectedHoverColor\n\t\t} else {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkSelectedHoverColor\n\t\t}\n\t} else {\n\t\tif (isLightThemed()) {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.lightHoverColor\n\t\t} else {\n\t\t\tsocialButtonHover.style.backgroundColor = colors.darkHoverColor\n\t\t}\n\t}\n})"],
  "mappings": "MAAO,IAAMA,EAAS,CACrB,gBAAiB,UACjB,eAAgB,UAChB,wBAAyB,UACzB,uBAAwB,UACxB,qBAAsB,cACtB,oBAAqB,cACrB,6BAA8B,UAC9B,4BAA6B,UAC7B,eAAgB,UAChB,uBAAwB,UACxB,cAAe,UACf,sBAAuB,SACxB,ECXA,IAAMC,EAAmC,SAAS,eAAe,sBAAsB,EACjFC,EAA0B,SAAS,eAAe,sBAAsB,EACxEC,EAAiC,SAAS,eAAe,qBAAqB,EAC9EC,EAA+B,SAAS,eAAe,wBAAwB,EAErF,SAASC,GAAgB,CACxB,OAAOH,EAAW,UAAU,SAAS,SAAS,CAC/C,CAEA,IAAMI,EAAsB,IAAI,iBAAiB,CAACC,EAAuBC,IAAc,CAClFD,EAAa,CAAC,EAAE,OAAO,UAAU,SAAS,SAAS,EAClDN,EAAe,SAClBC,EAAW,MAAM,gBAAkBO,EAAO,6BAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,wBACjDL,EAAgB,MAAM,MAAQK,EAAO,yBAErCL,EAAgB,MAAM,MAAQK,EAAO,eACrCP,EAAW,MAAM,gBAAkBO,EAAO,qBAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,iBAG9CR,EAAe,SAClBC,EAAW,MAAM,gBAAkBO,EAAO,4BAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,uBACjDL,EAAgB,MAAM,MAAQK,EAAO,wBAErCP,EAAW,MAAM,gBAAkBO,EAAO,oBAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,eACjDL,EAAgB,MAAM,MAAQK,EAAO,cAGxC,CAAC,EAEDH,EAAoB,QAAQJ,EAAY,CAAE,WAAY,EAAK,CAAC,EAE5DD,EAAe,iBAAiB,SAAU,UAAY,CACjD,KAAK,QACJI,EAAc,GACjBH,EAAW,MAAM,gBAAkBO,EAAO,6BAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,wBACjDL,EAAgB,MAAM,MAAQK,EAAO,yBAErCL,EAAgB,MAAM,MAAQK,EAAO,sBACrCP,EAAW,MAAM,gBAAkBO,EAAO,4BAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,wBAG9CJ,EAAc,GACjBH,EAAW,MAAM,gBAAkBO,EAAO,qBAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,gBACjDL,EAAgB,MAAM,MAAQK,EAAO,iBAErCP,EAAW,MAAM,gBAAkBO,EAAO,oBAC1CN,EAAkB,MAAM,gBAAkBM,EAAO,eACjDL,EAAgB,MAAM,MAAQK,EAAO,cAGxC,CAAC,EAEDP,EAAW,iBAAiB,YAAa,UAAY,CAChDD,EAAe,QACdI,EAAc,EACjBF,EAAkB,MAAM,gBAAkBM,EAAO,wBAEjDN,EAAkB,MAAM,gBAAkBM,EAAO,uBAG9CJ,EAAc,EACjBF,EAAkB,MAAM,gBAAkBM,EAAO,gBAEjDN,EAAkB,MAAM,gBAAkBM,EAAO,cAGpD,CAAC",
  "names": ["colors", "socialCheckbox", "socialPill", "socialButtonHover", "socialPillLabel", "isLightThemed", "socialThemeObserver", "mutationList", "_observer", "colors"]
}
